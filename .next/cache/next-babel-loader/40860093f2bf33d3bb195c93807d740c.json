{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internship\\\\thet_HAJ\\\\new_admin\\\\pages\\\\data_input.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { loadFirebase } from '../lib/db.js';\nexport default class AreaInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      cities: [\"Matsuyama\", \"Imabari\", \"Niihama\", \"Saijo\", \"Shikokuchuo\", \"Uwaima\", \"Ozu\", \"Seiyo\", \"Lyo\", \"Yawatahama\", \"Toon\", \"Masaki\", \"Ainan\", \"Tobe\", \"Uchiko\", \"Kihoku\", \"Ikata\", \"Kumakagen\", \"Kamijima\"],\n      area_id: ''\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(event.target.value);\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      event.preventDefault();\n      let firebase = loadFirebase();\n\n      for (var i = 0; i < this.state.cities.length; i++) {\n        try {\n          firebase.firestore().collection('city').add({\n            name: this.state.cities[i],\n            area_id: this.state.area_id\n          });\n          console.log(`new city added ${this.state.name}`);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  }\n\n  static async getInitialProps({\n    req,\n    res,\n    query\n  }) {\n    let firebase = loadFirebase();\n    let areas = [];\n    const querySnapshotUser = await firebase.firestore().collection('area').get();\n    querySnapshotUser.forEach(doc => {\n      areas.push(Object.assign({\n        id: doc.id,\n        data: doc.data()\n      }));\n    });\n    return {\n      areas\n    };\n  }\n\n  render() {\n    const areas = this.props.areas;\n    return __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(\"select\", {\n      name: \"area_id\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, areas && areas.map(area => __jsx(\"option\", {\n      value: area.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, area.data.areaName))), __jsx(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["D:/Internship/thet_HAJ/new_admin/pages/data_input.js"],"names":["loadFirebase","AreaInput","React","Component","cities","area_id","event","setState","target","name","value","console","log","preventDefault","firebase","i","state","length","firestore","collection","add","error","getInitialProps","req","res","query","areas","querySnapshotUser","get","forEach","doc","push","Object","assign","id","data","render","props","handleChange","map","area","areaName","handleSubmit"],"mappings":"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","sourcesContent":["import {loadFirebase} from '../lib/db.js'\r\n\r\nexport default class AreaInput extends React.Component{\r\n    static async getInitialProps ({req,res,query}){\r\n        let firebase = loadFirebase()\r\n        let areas = []\r\n        const querySnapshotUser = await firebase.firestore().collection('area').get()\r\n\r\n        querySnapshotUser.forEach(doc => {\r\n            areas.push(Object.assign(\r\n                {id : doc.id,\r\n              data : doc.data()}\r\n            ))\r\n          })\r\n        return {areas}\r\n    }\r\n    state = {\r\n        cities : [\r\n            \"Matsuyama\",\r\n            \"Imabari\",\r\n            \"Niihama\",\r\n            \"Saijo\",\r\n            \"Shikokuchuo\",\r\n            \"Uwaima\",\r\n            \"Ozu\",\r\n            \"Seiyo\",\r\n            \"Lyo\",\r\n            \"Yawatahama\",\r\n            \"Toon\",\r\n            \"Masaki\",\r\n            \"Ainan\",\r\n            \"Tobe\",\r\n            \"Uchiko\",\r\n            \"Kihoku\",\r\n            \"Ikata\",\r\n            \"Kumakagen\",\r\n            \"Kamijima\"\r\n\r\n        ],\r\n        area_id : ''\r\n    }\r\n\r\n    handleChange = (event)=>{\r\n        this.setState({[event.target.name] : event.target.value})\r\n        console.log(event.target.value)\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        let firebase = loadFirebase()\r\n        for(var i = 0;i<this.state.cities.length;i++){\r\n            try{\r\n                firebase.firestore().collection('city').add({name : this.state.cities[i], area_id : this.state.area_id})\r\n                console.log(`new city added ${this.state.name}`)\r\n            }catch (error){\r\n                console.log(error)\r\n            }\r\n        }\r\n        \r\n    } \r\n    render (){\r\n        const areas = this.props.areas\r\n        return (\r\n            <form>\r\n                \r\n                <select name=\"area_id\" onChange={this.handleChange}>\r\n                    {areas && areas.map(area => (\r\n                        <option value={area.id}>{area.data.areaName}</option>\r\n                    ))}\r\n                </select>\r\n                <button onClick={this.handleSubmit}>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}