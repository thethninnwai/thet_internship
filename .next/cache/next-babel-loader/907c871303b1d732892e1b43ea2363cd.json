{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internship\\\\thet_HAJ\\\\new_admin\\\\pages\\\\data_input.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { loadFirebase } from '../lib/db.js';\nexport default class AreaInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      cities: [\"Tokyo\", \"Osaka\", \"Hiroshima\", \"Nagoya\", \"Nagano\", \"Kyoto\", \"Sendai\", \"Sakata\", \"Kanazawa\", \"Kobe\", \"Yokohama\", \"Akita\", \"Aomori\", \"Hirosaki\", \"Hachinohe\", \"Fukushima\", \"Morioka\", \"Niigata\", \"Kure\", \"Matsue\", \"Tottori\", \"Gifu\", \"Tsu\", \"Matsumoto\", \"Shizuoka\", \"Hamamatsu\", \"Fukui\", \"Maizuru\", \"Wakayama\", \"Mito\", \"Kofu\", \"Iwaki\", \"Nagaoka\", \"Yamagata\", \"Tsuruoka\", \"Okayama\", \"Shimonoseki\", \"Toyama\", \"Takaoka\", \"Otsu\", \"Maebashi\", \"Kawasaki\", \"Kawagoe\", \"Utsunomiya\", \"Hachioji\", \"Koriyama\"],\n      areaName: ''\n    });\n\n    _defineProperty(this, \"handleChange\", event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(event.target.value);\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      event.preventDefault();\n\n      for (var i = 0; i < this.state.cities.length; i++) {\n        try {\n          db.collection('city').add({\n            name: this.state.cities[i],\n            area_id: this.state.area_id\n          });\n          console.log(`new city added ${this.state.name}`);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    });\n  }\n\n  static async getInitialProps({\n    req,\n    res,\n    query\n  }) {\n    let firebase = loadFirebase();\n    let areas = [];\n    const querySnapshotUser = await firebase.firestore().collection('area').get();\n    querySnapshotUser.forEach(doc => {\n      areas.push(Object.assign({\n        id: doc.id,\n        data: doc.data()\n      }));\n    });\n    return {\n      areas\n    };\n  }\n\n  render() {\n    const areas = this.props.areas;\n    return __jsx(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, __jsx(\"select\", {\n      name: \"areaName\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, areas && areas.map(area => __jsx(\"option\", {\n      value: area.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, area.data.areaName))), __jsx(\"button\", {\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["D:/Internship/thet_HAJ/new_admin/pages/data_input.js"],"names":["loadFirebase","AreaInput","React","Component","cities","areaName","event","setState","target","name","value","console","log","preventDefault","i","state","length","db","collection","add","area_id","error","getInitialProps","req","res","query","firebase","areas","querySnapshotUser","firestore","get","forEach","doc","push","Object","assign","id","data","render","props","handleChange","map","area","handleSubmit"],"mappings":"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","sourcesContent":["import {loadFirebase} from '../lib/db.js'\r\n\r\nexport default class AreaInput extends React.Component{\r\n    static async getInitialProps ({req,res,query}){\r\n        let firebase = loadFirebase()\r\n        let areas = []\r\n        const querySnapshotUser = await firebase.firestore().collection('area').get()\r\n\r\n        querySnapshotUser.forEach(doc => {\r\n            areas.push(Object.assign(\r\n                {id : doc.id,\r\n              data : doc.data()}\r\n            ))\r\n          })\r\n        return {areas}\r\n    }\r\n    state = {\r\n        cities : [\r\n            \"Tokyo\", \r\n            \"Osaka\", \r\n            \"Hiroshima\",\r\n            \"Nagoya\", \r\n            \"Nagano\", \r\n            \"Kyoto\", \r\n            \"Sendai\", \r\n            \"Sakata\", \r\n            \"Kanazawa\", \r\n            \"Kobe\", \r\n            \"Yokohama\", \r\n            \"Akita\", \r\n            \"Aomori\", \r\n            \"Hirosaki\", \r\n            \"Hachinohe\", \r\n            \"Fukushima\", \r\n            \"Morioka\", \r\n            \"Niigata\", \r\n            \"Kure\", \r\n            \"Matsue\", \r\n            \"Tottori\", \r\n            \"Gifu\", \r\n            \"Tsu\", \r\n            \"Matsumoto\", \r\n            \"Shizuoka\", \r\n            \"Hamamatsu\", \r\n            \"Fukui\", \r\n            \"Maizuru\", \r\n            \"Wakayama\", \r\n            \"Mito\", \r\n            \"Kofu\", \r\n            \"Iwaki\", \r\n            \"Nagaoka\", \r\n            \"Yamagata\", \r\n            \"Tsuruoka\", \r\n            \"Okayama\", \r\n            \"Shimonoseki\", \r\n            \"Toyama\", \r\n            \"Takaoka\", \r\n            \"Otsu\", \r\n            \"Maebashi\", \r\n            \"Kawasaki\", \r\n            \"Kawagoe\", \r\n            \"Utsunomiya\", \r\n            \"Hachioji\", \r\n            \"Koriyama\"\r\n        ],\r\n        areaName : ''\r\n    }\r\n\r\n    handleChange = (event)=>{\r\n        this.setState({[event.target.name] : event.target.value})\r\n        console.log(event.target.value)\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        for(var i = 0;i<this.state.cities.length;i++){\r\n            try{\r\n                db.collection('city').add({name : this.state.cities[i], area_id : this.state.area_id})\r\n                console.log(`new city added ${this.state.name}`)\r\n            }catch (error){\r\n                console.log(error)\r\n            }\r\n        }\r\n        \r\n    } \r\n    render (){\r\n        const areas = this.props.areas\r\n        return (\r\n            <form>\r\n                \r\n                <select name=\"areaName\" onChange={this.handleChange}>\r\n                    {areas && areas.map(area => (\r\n                        <option value={area.id}>{area.data.areaName}</option>\r\n                    ))}\r\n                </select>\r\n                <button onClick={this.handleSubmit}>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}